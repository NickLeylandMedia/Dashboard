{"version":3,"sources":["modules/SwitchStyle.ts","components/AppLauncher.tsx","components/Bookmarks.tsx","img/blankBox.svg","img/checkedBox.svg","components/Productivity.tsx","img/Youtube.svg","img/Udemy.svg","img/Facebook.svg","img/Reddit.svg","img/github.svg","components/QuickBar.tsx","components/SearchBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SwitchStyle","color","filter","back","forEach","item","document","body","classList","remove","add","AppLauncher","renderedApps","renderedMaintApps","targIcon","apps","activeToggler","iconArr","Name","Icon","FaFacebookSquare","BsGithub","SiGmail","SiHulu","SiNetflix","GrPlay","FaRedditSquare","FaSpotify","FaTwitter","SiUdemy","BsYoutube","useState","maintMode","setMaint","length","activeApps","app","Active","map","URL","index","findIndex","className","onClick","href","Bookmarks","addBookmark","bookMarks","categoryArr","activeArr","i","includes","Category","push","sort","a","b","Items","filtrate","expandHandler","e","botTarg","target","parentElement","nextSibling","contains","renderedCats","renderedItems","maint","onSubmit","preventDefault","formData","value","querySelector","toggle","setTimeout","htmlFor","type","Productivity","lists","updateLists","checkHandler","listIndex","taskIndex","proxyList","list","previousSibling","innerHTML","x","console","log","task","firstChild","y","Task","Done","resetHandler","newList","useEffect","localList","JSON","parse","localStorage","getItem","setItem","stringify","renderedChecks","renderedCheckItems","src","checked","alt","blank","QuickBar","renderedQuick","FacebookLogo","GithubLogo","YoutubeLogo","UdemyLogo","RedditLogo","SearchBar","searchTerm","setSearch","search","term","window","location","focus","action","onChange","App","innerWidth","conn","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","getAnalytics","fetchData","marksArr","finalAppArr","proxAppsArr","getDocs","collection","fullMarkQuery","fullAppQuery","doc","data","newApp","setBookMarks","setApps","setDoc","Fragment","proxApps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.007f6ecb.chunk.js","sourcesContent":["export const SwitchStyle = (color: string): void => {\n  const styleArr: string[] = [\"blueBack\", \"greenBack\", \"orangeBack\", \"redBack\"];\n  const inactiveArr = styleArr.filter((back) => back !== color);\n  inactiveArr.forEach((item) => document.body.classList.remove(item));\n  document.body.classList.add(color);\n};\n","/* Library Imports */\n//React\nimport React, { useState } from \"react\";\n\n/* Stylesheet Imports */\nimport \"../styles/AppLauncher.scss\";\n\n/* Image Imports */\nimport { BsGithub, BsYoutube } from \"react-icons/bs\";\nimport {\n  FaFacebookSquare,\n  FaRedditSquare,\n  FaSpotify,\n  FaTwitter,\n} from \"react-icons/fa\";\nimport { GrPlay } from \"react-icons/gr\";\nimport { SiGmail, SiHulu, SiNetflix, SiUdemy } from \"react-icons/si\";\n\n/* Component Imports */\n\n/* Component Interfaces */\ninterface Props {\n  activeToggler: (App: string) => void;\n  apps: any[];\n}\n\n/* Component/Functions */\nconst AppLauncher: React.FC<Props> = ({ apps, activeToggler }) => {\n  const iconArr: any = [\n    { Name: \"Facebook\", Icon: FaFacebookSquare },\n    { Name: \"GitHub\", Icon: BsGithub },\n    { Name: \"Gmail\", Icon: SiGmail },\n    { Name: \"Hulu\", Icon: SiHulu },\n    { Name: \"Netflix\", Icon: SiNetflix },\n    { Name: \"Paramount+\", Icon: GrPlay },\n    { Name: \"Reddit\", Icon: FaRedditSquare },\n    { Name: \"Spotify\", Icon: FaSpotify },\n    { Name: \"Twitter\", Icon: FaTwitter },\n    { Name: \"Udemy\", Icon: SiUdemy },\n    { Name: \"Youtube\", Icon: BsYoutube },\n  ];\n\n  //State to store maintenance state\n  const [maintMode, setMaint] = useState<Boolean>(false);\n\n  //Logic to render apps\n  let renderedApps;\n  let renderedMaintApps;\n  let targIcon: any;\n\n  if (apps.length) {\n    let activeApps = apps.filter((app) => {\n      return app.Active;\n    });\n\n    renderedMaintApps = apps.map(({ Name, URL, Active }) => {\n      let index = iconArr.findIndex((item: any) => {\n        return item.Name === Name;\n      });\n      targIcon = iconArr[index].Icon();\n\n      if (Active) {\n        return (\n          <div className=\"launApp active\" onClick={() => activeToggler(Name)}>\n            {targIcon}\n            <div className=\"launAppInfo\">\n              <p>{Name}</p>\n            </div>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"launApp\" onClick={() => activeToggler(Name)}>\n            {targIcon}\n\n            <div className=\"launAppInfo\">\n              <p>{Name}</p>\n            </div>\n          </div>\n        );\n      }\n    });\n\n    if (activeApps.length) {\n      renderedApps = activeApps.map(({ Name, URL }) => {\n        let index = iconArr.findIndex((item: any) => {\n          return item.Name === Name;\n        });\n        targIcon = iconArr[index].Icon();\n        return (\n          <div className=\"launApp\">\n            {targIcon}\n            <div className=\"launAppInfo\">\n              <a href={URL}>{Name}</a>\n            </div>\n          </div>\n        );\n      });\n    } else {\n      renderedApps = <div className=\"noActive\">No Active Apps!</div>;\n    }\n  } else {\n    renderedMaintApps = <div className=\"noActive\">No Apps Loaded</div>;\n  }\n\n  //Function return statement\n\n  if (maintMode) {\n    return (\n      <div className=\"AppLauncher\">\n        <div className=\"launcher-cont\">{renderedMaintApps}</div>\n        <button className=\"editAppsButton\" onClick={() => setMaint(false)}>\n          Finish\n        </button>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"AppLauncher\">\n        <div className=\"launcher-cont\">{renderedApps}</div>\n        <button className=\"editAppsButton\" onClick={() => setMaint(true)}>\n          Edit Active Apps\n        </button>\n      </div>\n    );\n  }\n};\n\n/* Export Statement */\nexport default AppLauncher;\n","/* Library Imports */\n//React\nimport React, { useEffect, useState } from \"react\";\n\n/* Stylesheet Imports */\nimport \"../styles/Bookmarks.scss\";\n\n/* Image Imports */\nimport squareClose from \"../img/squareClose.svg\";\n\n/* Component Imports */\n\n/* Component Interfaces */\ntype Props = {\n  addBookmark: (Category: string, Name: string, URL: string) => Promise<void>;\n  bookMarks: any[];\n};\n\n/* Component/Functions */\nconst Bookmarks: React.FC<Props> = ({ addBookmark, bookMarks }) => {\n  //Bookmark Sorting\n  const categoryArr: any[] = [];\n  const activeArr: any[] = [];\n  let sortedFinal: any[] = [];\n  for (let i = 0; i < bookMarks.length; i++) {\n    if (categoryArr.includes(bookMarks[i].Category)) {\n    } else {\n      categoryArr.push(bookMarks[i].Category);\n      categoryArr.sort((a, b) => (a < b ? -1 : 1));\n    }\n  }\n  for (let i = 0; i < categoryArr.length; i++) {\n    let Category = (Name: string) => {\n      return { Category: Name, Items: [] };\n    };\n    activeArr.push(Category(categoryArr[i]));\n  }\n  for (let i = 0; i < activeArr.length; i++) {\n    const filtrate = bookMarks.filter((item) => {\n      return item.Category === activeArr[i].Category;\n    });\n    activeArr[i].Items = filtrate;\n  }\n\n  //Category Expansion Logic\n  let expandHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    let evTarg = e.target as HTMLButtonElement;\n    let botTarg = evTarg.parentElement?.nextSibling as HTMLBodyElement;\n    if (botTarg.classList.contains(\"show\")) {\n      botTarg.classList.remove(\"show\");\n    } else {\n      botTarg.classList.add(\"show\");\n    }\n  };\n\n  const bookmarkHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData: any = e.target;\n    addBookmark(formData[0].value, formData[1].value, formData[2].value);\n    formData[0].value = \"\";\n    formData[1].value = \"\";\n    formData[2].value = \"\";\n    document.querySelector(\".successText\")?.classList.toggle(\"show\");\n    setTimeout(() => {\n      document.querySelector(\".successText\")?.classList.toggle(\"show\");\n    }, 1000);\n  };\n\n  //Bookmark render logic - Categories.\n  let renderedCats = activeArr.map(({ Category, Items }) => {\n    let renderedItems = Items.map(\n      ({ Name, URL }: { Name: string; URL: string }) => {\n        return (\n          <li className=\"link\">\n            <a href={URL}>{Name}</a>\n          </li>\n        );\n      }\n    );\n    return (\n      <div className=\"bmCat\">\n        <div className=\"catTop card\">\n          <h4>{Category}</h4>\n          <button\n            className=\"catIntButton btn btn-primary\"\n            onClick={expandHandler}\n          >\n            [+]\n          </button>\n        </div>\n        <div className=\"catBottom card\">\n          <ul className=\"linkList\">{renderedItems}</ul>\n        </div>\n      </div>\n    );\n  });\n\n  //State to store component \"maintenance\" state\n  const [maint, setMaint] = useState<boolean>(false);\n\n  //Logic for showing maintenance panel\n  if (maint) {\n    return (\n      <div className=\"Bookmarks\">\n        <h3 className=\"modTitle\">Bookmarks Maintenance Panel</h3>\n        <div className=\"bmMaint\">\n          <form onSubmit={bookmarkHandler} className=\"bmForm\">\n            <div className=\"bmInput\">\n              <label htmlFor=\"\" className=\"bmInputLabel\">\n                Category\n              </label>\n              <input type=\"text\" className=\"bmInput\" />\n            </div>\n            <div className=\"bmInput\">\n              <label htmlFor=\"\" className=\"bmInputLabel\">\n                Name\n              </label>\n              <input type=\"text\" className=\"bmInput\" />\n            </div>\n            <div className=\"bmInput\">\n              <label htmlFor=\"\" className=\"bmInputLabel\">\n                URL\n              </label>\n              <input type=\"text\" className=\"bmInput\" />\n            </div>\n            <div className=\"bmInput\">\n              <button className=\"addBmButton\">Add Bookmark</button>\n            </div>\n            <p className=\"successText\">Bookmark added!</p>\n          </form>\n          <button className=\"maintPanelButton\">EDIT/DELETE BOOKMARKS</button>\n          <button className=\"maintPanelButton\">CLOSE PANEL</button>\n        </div>\n      </div>\n    );\n  } else {\n    //Function Return Statement\n    return (\n      <div className=\"Bookmarks\">\n        <h2 className=\"modTitle\">Bookmarks</h2>\n        <div className=\"catCont\">{renderedCats}</div>\n        <div className=\"bmActions\">\n          <button className=\"actionButton\" onClick={() => setMaint(true)}>\n            EDIT\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\n/* Export Statement */\nexport default Bookmarks;\n","export default __webpack_public_path__ + \"static/media/blankBox.e5a9d6f8.svg\";","export default __webpack_public_path__ + \"static/media/checkedBox.bdf36f78.svg\";","/* Library Imports */\n//React\nimport React, { useState, useEffect } from \"react\";\n\n/* Stylesheet Imports */\nimport \"../styles/Productivity.scss\";\n\n/* Image Imports */\nimport blank from \"../img/blankBox.svg\";\nimport checked from \"../img/checkedBox.svg\";\n\n/* Component Imports */\n\n/* Component/Functions */\nconst Productivity = () => {\n  //Checklist render array.\n  const [lists, updateLists] = useState<any[]>([]);\n\n  //Check Handler Function\n  const checkHandler = (e: any) => {\n    const proxyList = [...lists];\n    let listIndex: any;\n    let taskIndex: any;\n    //Logic for determining parent list\n    if (\n      e.target.className === \"listItem\" ||\n      e.target.className === \"listItem done\"\n    ) {\n      const list = e.target.parentElement.previousSibling.innerHTML;\n      listIndex = proxyList.findIndex((x) => x.Name === list);\n      console.log(listIndex);\n    } else {\n      const list =\n        e.target.parentElement.parentElement.previousSibling.innerHTML;\n      listIndex = proxyList.findIndex((x) => x.Name === list);\n    }\n    //Logic to determine task\n    if (\n      e.target.className === \"listItem\" ||\n      e.target.className === \"listItem done\"\n    ) {\n      const task = e.target.firstChild.innerHTML;\n      taskIndex = proxyList[listIndex].Items.findIndex(\n        (y: any) => y.Task === task\n      );\n    } else if (e.target.className === \"taskImg\") {\n      const task = e.target.previousSibling.innerHTML;\n      taskIndex = proxyList[listIndex].Items.findIndex(\n        (y: any) => y.Task === task\n      );\n    } else {\n      const task = e.target.innerHTML;\n      taskIndex = proxyList[listIndex].Items.findIndex(\n        (y: any) => y.Task === task\n      );\n    }\n    //Logic to switch task status\n    if (proxyList[listIndex].Items[taskIndex].Done === true) {\n      proxyList[listIndex].Items[taskIndex].Done = false;\n      updateLists(proxyList);\n    } else {\n      proxyList[listIndex].Items[taskIndex].Done = true;\n      updateLists(proxyList);\n    }\n  };\n\n  //Reset Handler\n  const resetHandler = (e: any) => {\n    const proxyList = [...lists];\n    const list = e.target.parentElement.firstChild.innerHTML;\n    const index = proxyList.findIndex((x) => x.Name === list);\n    const newList = proxyList[index].Items.map((item: any) => ({\n      Task: item.Task,\n      Done: false,\n    }));\n    proxyList[index].Items = newList;\n    updateLists(proxyList);\n  };\n\n  //Logic to load from local storage\n  useEffect(() => {\n    //Initial array (for setting state)\n    let initList = [\n      {\n        Name: \"Media\",\n        Items: [\n          { Task: \"Post Vlog On Youtube\", Done: false },\n          { Task: \"Post Video On Youtube\", Done: false },\n        ],\n      },\n      {\n        Name: \"Social\",\n        Items: [\n          { Task: \"Post Photo on Main Instagram\", Done: false },\n          { Task: \"Post Photo on r/ITAP\", Done: false },\n          { Task: \"Post Photo on Printing Instagram\", Done: false },\n          { Task: \"Share Vlog On Facebook\", Done: false },\n        ],\n      },\n    ];\n\n    const localList = JSON.parse(localStorage.getItem(\"listData\") || \"false\");\n    if (localList) {\n      updateLists(localList);\n    } else {\n      updateLists(initList);\n    }\n  }, []);\n\n  //Logic to save to local storage\n  useEffect(() => {\n    localStorage.setItem(\"listData\", JSON.stringify(lists));\n  }, [lists]);\n\n  //Checklist render logic.\n  let renderedChecks = lists.map(({ Name, Items }) => {\n    let renderedCheckItems = Items.map(\n      ({ Task, Done }: { Task: string; Done: boolean }) => {\n        if (Done) {\n          return (\n            <div className=\"listItem done\" onClick={checkHandler}>\n              <p className=\"taskText\">{Task}</p>\n              <img src={checked} alt=\"\" className=\"taskImg\" />\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"listItem\" onClick={checkHandler}>\n              <p className=\"taskText\">{Task}</p>\n              <img src={blank} alt=\"\" className=\"taskImg\" />\n            </div>\n          );\n        }\n      }\n    );\n\n    return (\n      <div className=\"list card\">\n        <h2 className=\"clTitle\">{Name}</h2>\n        <div className=\"listitemCont\">{renderedCheckItems}</div>\n        <button className=\"resetButton\" onClick={resetHandler}>\n          Reset List\n        </button>\n      </div>\n    );\n  });\n\n  //Function Return Statement\n  return (\n    <div className=\"Productivity\">\n      <h2 className=\"modTitle\">Productivity</h2>\n      <div className=\"listSel\"></div>\n      <div className=\"listDisp\">{renderedChecks}</div>\n    </div>\n  );\n};\n\n/* Export Statement */\nexport default Productivity;\n","export default __webpack_public_path__ + \"static/media/Youtube.32745cdb.svg\";","export default __webpack_public_path__ + \"static/media/Udemy.01db01f7.svg\";","export default __webpack_public_path__ + \"static/media/Facebook.435ed5a8.svg\";","export default __webpack_public_path__ + \"static/media/Reddit.f6fd3594.svg\";","export default __webpack_public_path__ + \"static/media/github.e21209f2.svg\";","/* Library Imports */\n//React\nimport React from \"react\";\n\n/* Stylesheet Imports */\nimport \"../styles/QuickBar.scss\";\n\n/* Image Imports */\nimport YoutubeLogo from \"../img/Youtube.svg\";\nimport UdemyLogo from \"../img/Udemy.svg\";\nimport FacebookLogo from \"../img/Facebook.svg\";\nimport RedditLogo from \"../img/Reddit.svg\";\nimport GithubLogo from \"../img/github.svg\";\n\n/* Component Imports */\n\n/* Component/Functions */\nconst QuickBar = () => {\n  //Array to render quick access from.\n  const quick: any[] = [\n    {\n      Name: \"Facebook\",\n      Icon: FacebookLogo,\n      URL: \"https://www.facebook.com/\",\n    },\n    {\n      Name: \"GitHub\",\n      Icon: GithubLogo,\n      URL: \"https://www.github.com/\",\n    },\n    {\n      Name: \"YouTube\",\n      Icon: YoutubeLogo,\n      URL: \"https://www.youtube.com/\",\n    },\n    {\n      Name: \"Udemy\",\n      Icon: UdemyLogo,\n      URL: \"https://www.udemy.com/\",\n    },\n    {\n      Name: \"Reddit\",\n      Icon: RedditLogo,\n      URL: \"https://www.reddit.com/\",\n    },\n  ];\n  //Logic to render quick access.\n  const renderedQuick = quick.map(({ Name, Icon, URL }) => {\n    return (\n      <div key={`qi${Name}`} className=\"quickItem\">\n        <a href={URL}>\n          <img src={Icon} alt=\"\" className=\"quickImg\" />\n        </a>\n        <a href={URL} className=\"quickLink\">\n          {Name}\n        </a>\n      </div>\n    );\n  });\n\n  //Function Return Statement\n  return <div className=\"QuickBar\">{renderedQuick}</div>;\n};\n\n/* Export Statement */\nexport default QuickBar;\n","/* Library Imports */\n//React\nimport React, { useEffect, useState } from \"react\";\n\n/* Stylesheet Imports */\nimport \"../styles/SearchBar.scss\";\n\n/* Image Imports */\n\n/* Component Imports */\n\n/* Component/Functions */\nconst SearchBar = () => {\n  //State to store search term\n  const [searchTerm, setSearch] = useState<string>(\"\");\n\n  //Function to execute search term\n  const search = (e: any, term: string) => {\n    e.preventDefault();\n    window.location.href = `https://www.google.com/search?q=${term}`;\n  };\n\n  //Effect to focus the input on page load\n  useEffect(() => {\n    const targ = document.querySelector(\".searchInput\") as HTMLElement;\n    targ.focus();\n  }, []);\n\n  return (\n    <div className=\"SearchBar\">\n      <form action=\"\">\n        <input\n          type=\"text\"\n          className=\"searchInput\"\n          onChange={(e) => setSearch(e.target.value)}\n          onSubmit={(e) => search(e, searchTerm)}\n        />\n        <button className=\"searchButton\" onClick={(e) => search(e, searchTerm)}>\n          GO\n        </button>\n      </form>\n    </div>\n  );\n};\n\n/* Export Statement */\nexport default SearchBar;\n","/* Library Imports */\n//Axios\nimport axios from \"axios\";\n\n//Firebase\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  setDoc,\n  doc,\n  addDoc,\n  getDoc,\n} from \"firebase/firestore/lite\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n//React\nimport React, { useEffect, useState } from \"react\";\n\n//Style Switcher\nimport { SwitchStyle } from \"./modules/SwitchStyle\";\n\n/* Stylesheet Imports */\nimport \"./styles/App.scss\";\n\n/* Image Imports */\n\n/* Component Imports */\nimport AppLauncher from \"./components/AppLauncher\";\nimport Bookmarks from \"./components/Bookmarks\";\nimport Productivity from \"./components/Productivity\";\nimport QuickBar from \"./components/QuickBar\";\nimport SearchBar from \"./components/SearchBar\";\nimport Reminders from \"./components/Reminders\";\n\n/* Component/Functions */\nconst App = () => {\n  console.log(window.innerWidth);\n  /* Firebase Config */\n  //Configure Database\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBtwiL05692OikXEwHCufOXs170Asyq618\",\n    authDomain: \"dashboard-45d62.firebaseapp.com\",\n    projectId: \"dashboard-45d62\",\n    storageBucket: \"dashboard-45d62.appspot.com\",\n    messagingSenderId: \"882770343967\",\n    appId: \"1:882770343967:web:e6c13b24a2518234e23d2a\",\n    measurementId: \"G-9WR870YQM9\",\n  };\n\n  //Initialize firebase\n  const conn = initializeApp(firebaseConfig);\n  const db = getFirestore(conn);\n  const analytics = getAnalytics(conn);\n\n  //Load data from firebase\n  useEffect(() => {\n    const fetchData = async (db: any) => {\n      const marksArr: any = [];\n      const appsArr: any = [];\n      const finalAppArr: any = [];\n      const proxAppsArr: any = [];\n      const fullMarkQuery = await getDocs(collection(db, \"Bookmarks\"));\n      const fullAppQuery = await getDocs(collection(db, \"Apps\"));\n      const appProcess = fullAppQuery.forEach((doc) => {\n        proxAppsArr.push(doc.data());\n      });\n      const markProcess = fullMarkQuery.forEach((doc) => {\n        marksArr.push(doc.data());\n      });\n\n      const App = (Icon: string, Name: string, URL: string) => {\n        return { Name: Name, Icon: Icon, URL: URL, Active: false };\n      };\n\n      proxAppsArr.forEach(\n        ({ Icon, Name, URL }: { Icon: string; Name: string; URL: string }) => {\n          const newApp = App(Icon, Name, URL);\n          finalAppArr.push(newApp);\n        }\n      );\n\n      setBookMarks(marksArr);\n      setApps(finalAppArr);\n    };\n\n    //Bulk add apps\n    //addApp(\"SiGmail\", \"Gmail\", \"https://www.mail.google.com\");\n\n    fetchData(db);\n  }, []);\n\n  //State to store bookmarks from firebase\n  const [bookMarks, setBookMarks] = useState<any[]>([]);\n  //State to store apps from firebase\n  const [apps, setApps] = useState<any[]>([]);\n  //State to store style selection\n  const [color, setColor] = useState<string>(\"orange\");\n\n  //Style Switcher\n  //State to set app background color\n  switch (color) {\n    case \"blue\":\n      SwitchStyle(\"blueBack\");\n      break;\n    case \"green\":\n      SwitchStyle(\"greenBack\");\n      break;\n    case \"orange\":\n      SwitchStyle(\"orangeBack\");\n      break;\n    case \"red\":\n      SwitchStyle(\"redBack\");\n      break;\n  }\n\n  //Add an app\n  const addApp = async (Icon: string, Name: string, URL: string) => {\n    await setDoc(doc(db, \"Apps\", Name), {\n      Icon: Icon,\n      Name: Name,\n      URL: URL,\n    });\n  };\n\n  //Add a bookmark\n  const addBookmark = async (Category: string, Name: string, URL: string) => {\n    await setDoc(doc(db, \"Bookmarks\", Name), {\n      Category: Category,\n      Name: Name,\n      URL: URL,\n    });\n  };\n\n  //Active app toggle handler\n  const activeToggler = (App: string) => {\n    let proxApps = [...apps];\n    const index = proxApps.findIndex((item) => {\n      return item.Name === App;\n    });\n    if (proxApps[index].Active === false) {\n      proxApps[index].Active = true;\n      setApps(proxApps);\n    } else {\n      proxApps[index].Active = false;\n      setApps(proxApps);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <SearchBar />\n      <QuickBar />\n      <AppLauncher activeToggler={activeToggler} apps={apps} />\n      <div className=\"row\">\n        <Bookmarks bookMarks={bookMarks} addBookmark={addBookmark} />\n        <Productivity />\n      </div>\n    </React.Fragment>\n  );\n};\n\n/* Export Statement */\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}